/*
 * Firefly III API v1.5.5
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-01-30T05:47:28+00:00 
 *
 * The version of the OpenAPI document: 1.5.5
 * Contact: james@firefly-iii.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BudgetLimit {
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// Start date of the budget limit.
    #[serde(rename = "start")]
    pub start: String,
    /// End date of the budget limit.
    #[serde(rename = "end")]
    pub end: String,
    /// Use either currency_id or currency_code. Defaults to the user's default currency.
    #[serde(rename = "currency_id", skip_serializing_if = "Option::is_none")]
    pub currency_id: Option<String>,
    /// Use either currency_id or currency_code. Defaults to the user's default currency.
    #[serde(rename = "currency_code", skip_serializing_if = "Option::is_none")]
    pub currency_code: Option<String>,
    #[serde(rename = "currency_name", skip_serializing_if = "Option::is_none")]
    pub currency_name: Option<String>,
    #[serde(rename = "currency_symbol", skip_serializing_if = "Option::is_none")]
    pub currency_symbol: Option<String>,
    #[serde(rename = "currency_decimal_places", skip_serializing_if = "Option::is_none")]
    pub currency_decimal_places: Option<i32>,
    /// The budget ID of the associated budget.
    #[serde(rename = "budget_id")]
    pub budget_id: String,
    /// Period of the budget limit. Only used when auto-generated by auto-budget.
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<String>,
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "spent", skip_serializing_if = "Option::is_none")]
    pub spent: Option<String>,
}

impl BudgetLimit {
    pub fn new(start: String, end: String, budget_id: String, amount: String) -> BudgetLimit {
        BudgetLimit {
            created_at: None,
            updated_at: None,
            start,
            end,
            currency_id: None,
            currency_code: None,
            currency_name: None,
            currency_symbol: None,
            currency_decimal_places: None,
            budget_id,
            period: None,
            amount,
            spent: None,
        }
    }
}



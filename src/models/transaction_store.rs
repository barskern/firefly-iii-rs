/*
 * Firefly III API v1.5.5
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-01-30T05:47:28+00:00 
 *
 * The version of the OpenAPI document: 1.5.5
 * Contact: james@firefly-iii.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TransactionStore {
    /// Break if the submitted transaction exists already.
    #[serde(rename = "error_if_duplicate_hash", skip_serializing_if = "Option::is_none")]
    pub error_if_duplicate_hash: Option<bool>,
    /// Whether or not to apply rules when submitting transaction.
    #[serde(rename = "apply_rules", skip_serializing_if = "Option::is_none")]
    pub apply_rules: Option<bool>,
    /// Whether or not to fire the webhooks that are related to this event.
    #[serde(rename = "fire_webhooks", skip_serializing_if = "Option::is_none")]
    pub fire_webhooks: Option<bool>,
    /// Title of the transaction if it has been split in more than one piece. Empty otherwise.
    #[serde(rename = "group_title", skip_serializing_if = "Option::is_none")]
    pub group_title: Option<String>,
    #[serde(rename = "transactions")]
    pub transactions: Vec<crate::models::TransactionSplitStore>,
}

impl TransactionStore {
    pub fn new(transactions: Vec<crate::models::TransactionSplitStore>) -> TransactionStore {
        TransactionStore {
            error_if_duplicate_hash: None,
            apply_rules: None,
            fire_webhooks: None,
            group_title: None,
            transactions,
        }
    }
}



/*
 * Firefly III API v1.5.5
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-01-30T05:47:28+00:00 
 *
 * The version of the OpenAPI document: 1.5.5
 * Contact: james@firefly-iii.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WebhookAttempt {
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// The ID of the webhook message this attempt belongs to.
    #[serde(rename = "webhook_message_id", skip_serializing_if = "Option::is_none")]
    pub webhook_message_id: Option<String>,
    /// The HTTP status code of the error, if any.
    #[serde(rename = "status_code", skip_serializing_if = "Option::is_none")]
    pub status_code: Option<i32>,
    /// Internal log for this attempt. May contain sensitive user data.
    #[serde(rename = "logs", skip_serializing_if = "Option::is_none")]
    pub logs: Option<String>,
    /// Webhook receiver response for this attempt, if any. May contain sensitive user data.
    #[serde(rename = "response", skip_serializing_if = "Option::is_none")]
    pub response: Option<String>,
}

impl WebhookAttempt {
    pub fn new() -> WebhookAttempt {
        WebhookAttempt {
            created_at: None,
            updated_at: None,
            webhook_message_id: None,
            status_code: None,
            logs: None,
            response: None,
        }
    }
}


